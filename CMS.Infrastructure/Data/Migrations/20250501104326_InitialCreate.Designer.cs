// <auto-generated />
using System;
using CMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250501104326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Domain.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId")
                        .IsUnique()
                        .HasFilter("[LeaderId] IS NOT NULL");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Nco", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonId");

                    b.ToTable("Ncos", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Officer", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonId");

                    b.ToTable("Officers", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Governorate")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("JoinDateToUnit")
                        .HasColumnType("datetime2");

                    b.Property<string>("MilitaryNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("PersonTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Village")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("PersonTypeId");

                    b.HasIndex("RankId");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PersonTypes", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RankType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Soldier", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MilitaryServiceEndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonId");

                    b.ToTable("Soldiers", (string)null);
                });

            modelBuilder.Entity("CMS.Domain.Entities.Branch", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Officer", "Leader")
                        .WithOne("BranchLed")
                        .HasForeignKey("CMS.Domain.Entities.Branch", "LeaderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Nco", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Person", "Person")
                        .WithOne()
                        .HasForeignKey("CMS.Domain.Entities.Nco", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Officer", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Person", "Person")
                        .WithOne()
                        .HasForeignKey("CMS.Domain.Entities.Officer", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Person", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Branch", "Branch")
                        .WithMany("Persons")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.PersonType", "PersonType")
                        .WithMany("Persons")
                        .HasForeignKey("PersonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Domain.Entities.Rank", "Rank")
                        .WithMany("Persons")
                        .HasForeignKey("RankId");

                    b.Navigation("Branch");

                    b.Navigation("PersonType");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Soldier", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Person", "Person")
                        .WithOne()
                        .HasForeignKey("CMS.Domain.Entities.Soldier", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Branch", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Officer", b =>
                {
                    b.Navigation("BranchLed");
                });

            modelBuilder.Entity("CMS.Domain.Entities.PersonType", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Rank", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
